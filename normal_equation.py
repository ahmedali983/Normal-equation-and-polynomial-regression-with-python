# -*- coding: utf-8 -*-
"""Normal-equation

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1brUXxQYnv8CuRrPURFFFnm3MOfq_9krV
"""

## W = (Xt.x)-1 .Xt.y (Should be Matrixs)
## (Xt.x)-1 = 1/ absolute (matrics a).adj (a)

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import os

df = pd.read_csv('/content/market_data (1).csv')



df.head()

after_drop = df.drop('sales',axis = 1)
y = df['sales']

## to work with matrix we should work with numpy
np_array = after_drop.to_numpy()

np_array



x1 = df['youtube']
x2 = df['facebook']
x3 = df['newspaper']

##creat new coloumn to be our intercebt(b) constant

n= len(x1)
x_bais= np.ones((n,1))

x_new = np.append(x_bais ,np_array, axis = 1)

x_new_transpose = np.transpose(x_new)

x_new_transpose_dot_xnew = x_new_transpose.dot(x_new)

part1 = np.linalg.inv(x_new_transpose_dot_xnew)

part2 = x_new_transpose.dot(y)

theta = part1.dot(part2)



theta_0 = theta[0]
theta_1 = theta[1]
theta_2 = theta[2]
theta_3 = theta[3]
print(theta_0)
print(theta_1)
print(theta_2)
print(theta_3)

def pred_values(theta_0,theta_1,theta_2,theta_3,youtube,facebook,newspaper):
    predicted_value = youtube * theta_1 + facebook * theta_2 + newspaper * theta_3 + theta_0
    return predicted_value

youtube =351.48
facebook = 33.96
newspaper = 51.84
print(pred_values(theta_0,theta_1,theta_2,theta_3,youtube,facebook,newspaper))



















