# -*- coding: utf-8 -*-
"""polynomial Regression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C-GBZLb-eO6XTkbBJIdZQtUnegmDUOx4
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os

df = pd.read_csv('/content/sample_data/Position_Salaries (1).csv')

df

df = df.drop(['Position'],axis = 1)

df

x = df['Level'].values.reshape(-1,1)
y = df.iloc[:,-1]

x



y

from sklearn.linear_model import LinearRegression
ln = LinearRegression()
df_reg = ln.fit(x,y)
y_pred = df_reg.predict(x)

plt.plot(x,y_pred,color='red')
plt.scatter(x,y,color='blue')
plt.show()

from sklearn.preprocessing import PolynomialFeatures
poly = PolynomialFeatures(degree=4)
x_poly = poly.fit_transform(x)
ln2=LinearRegression()
ln2.fit(x_poly,y)
y_pred2=ln2.predict(x_poly)

plt.plot(x,y_pred2,color='red')
plt.scatter(x,y,color='blue')
plt.show()

x_gird = np.arange(min(x),max(x),0.1)
x_gird= x_gird.reshape(len(x_gird),1)

x_poly2 = poly.fit_transform(x_gird)
ln2=LinearRegression()
ln2.fit(x_poly, y) # Fit the model to your training data (x_poly, y)
y_pred3=ln2.predict(x_poly2)

plt.plot(x_gird,y_pred3,color='red')
plt.scatter(x,y,color='blue')
plt.show()

ln.predict([[6]])

ln2.predict(poly.fit_transform([[6]]))

df





































